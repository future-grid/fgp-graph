{"version":3,"sources":["webpack://FgpGraph/webpack/bootstrap","webpack://FgpGraph/./node_modules/moment-timezone/index.js","webpack://FgpGraph/./node_modules/moment-timezone/moment-timezone.js","webpack://FgpGraph/./src/extras/formatters.ts","webpack://FgpGraph/./src/extras/interactions.ts","webpack://FgpGraph/./src/extras/synchronizer.ts","webpack://FgpGraph/./src/index.ts","webpack://FgpGraph/./src/widgets/DomElements.ts","webpack://FgpGraph/external \"Dygraph\"","webpack://FgpGraph/external \"moment\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;AClFA,8BAA8B,mBAAO,CAAC,4EAAmB;AACzD,eAAe,mBAAO,CAAC,yFAA2B;;;;;;;;;;;;ACDlD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,KAA0B;AAC/B,2BAA2B,mBAAO,CAAC,sBAAQ,GAAG;AAC9C,EAAE,UAAU,IAA0C;AACtD,EAAE,iCAAO,CAAC,2CAAQ,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC,CAAC;AAC9B,EAAE,MAAM,EAEN;AACF,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;;AAEA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B,mEAAmE;AACnE;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kCAAkC,IAAI;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;;AAEA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","file":"fgp-graph.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n","//! moment-timezone.js\n//! version : 0.5.26\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.26\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n","import Dygraph from 'dygraphs';\nimport moment from 'moment-timezone';\n\nexport class Formatters {\n\n    constructor(public timezone: string) {\n\n    }\n\n\n    legendForAllSeries = (data) => {\n        if (data.x == null) {\n            // This happens when there's no selection and {legend: 'always'} is set.\n            return '<br>' + data.series.map(function (series) { return series.dashHTML + ' ' + series.labelHTML }).join('<br>');\n        }\n        var html = moment.tz(data.x, this.timezone ? this.timezone : moment.tz.guess()).format('lll z');\n        data.series.forEach(function (series) {\n            if (!series.isVisible) return;\n            var labeledData = series.labelHTML + ': ' + series.yHTML;\n            if (series.isHighlighted) {\n                labeledData = '<b style=\"color:' + series.color + ';\">' + labeledData + '</b>';\n            }\n            html += '<br>' + series.dashHTML + ' ' + labeledData;\n        });\n        return html;\n    }\n\n\n    legendForSingleSeries = (data) => {\n        if (data.x == null) {\n            // This happens when there's no selection and {legend: 'always'} is set.\n            return '<br>' + data.series.map(function (series) { return series.dashHTML + ' ' + series.labelHTML }).join('<br>');\n        }\n\n        var html = moment.tz(data.x, this.timezone ? this.timezone : moment.tz.guess()).format('lll z');\n\n        data.series.forEach(function (series) {\n            if (!series.isVisible) return;\n            var labeledData = series.labelHTML + ': ' + series.yHTML;\n            if (series.isHighlighted) {\n                labeledData = '<b style=\"color:' + series.color + ';\">' + labeledData + '</b>';\n                html += '<br>' + series.dashHTML + ' ' + labeledData;\n            }\n        });\n        return html;\n    }\n\n    axisLabel = (d, granularity) => {\n        // don't put it into formatters.ts becault we need to timezone later\n        let momentDatetime = moment.tz(d.getTime(), this.timezone ? this.timezone : moment.tz.guess());\n        let SHORT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let zeropad = (x) => {\n            if (x < 10) return \"0\" + x;\n            else return \"\" + x;\n        };\n\n        let hmsString_ = (hh, mm, ss) => {\n            var ret = zeropad(hh) + \":\" + zeropad(mm);\n            if (ss) {\n                ret += \":\" + zeropad(ss);\n            }\n            return ret;\n        };\n\n        if (granularity >= Dygraph.DECADAL) {\n            return '' + momentDatetime.year();\n        } else if (granularity >= Dygraph.MONTHLY) {\n            return SHORT_MONTH_NAMES[momentDatetime.month() + 1] + '&#160;' + momentDatetime.year();\n        } else {\n            var frac = momentDatetime.hours() * 3600 + momentDatetime.minutes() * 60 + momentDatetime.seconds() + 1e-3 * momentDatetime.milliseconds();\n            if (frac === 0 || granularity >= Dygraph.DAILY) {\n                // e.g. '21 Jan' (%d%b)\n                return zeropad(momentDatetime.date()) + '&#160;' + SHORT_MONTH_NAMES[momentDatetime.month() + 1];\n            } else {\n                return hmsString_(momentDatetime.hours(), momentDatetime.minutes(), momentDatetime.seconds());\n            }\n        }\n    }\n\n}","import Dygraph from 'dygraphs';\n\n\nexport class GraphInteractions {\n\n\n    private panEnable: boolean;\n\n    private mouseTimer: number;\n\n    private scrollEnable: boolean;\n\n    private scrollTimer: number;\n\n    private preDatewindow: Array<any>;\n\n    private needRefresh: boolean;\n\n    private yAxisRangeChanged: boolean;\n\n    constructor(public callback: any, public dateRange?: Array<number>) {\n        this.panEnable = false;\n        this.scrollEnable = false;\n    }\n\n    private pageX = (e) => {\n        return !e.pageX || e.pageX < 0 ? 0 : e.pageX;\n    }\n\n    private pageY = (e) => {\n        return !e.pageY || e.pageY < 0 ? 0 : e.pageY;\n    }\n\n    private dragGetX_ = (e, context) => {\n        return this.pageX(e) - context.px;\n    }\n\n    private dragGetY_ = (e, context) => {\n        return this.pageY(e) - context.py;\n    }\n\n    private cancelEvent = (e) => {\n        e = e ? e : window.event;\n        if (e.stopPropagation) {\n            e.stopPropagation();\n        }\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        e.cancelBubble = true;\n        e.cancel = true;\n        e.returnValue = false;\n        return false;\n    }\n\n    private offsetToPercentage = (g, offsetX, offsetY) => {\n        // This is calculating the pixel offset of the leftmost date.\n        var xOffset = g.toDomCoords(g.xAxisRange()[0], null)[0];\n        var yar0 = g.yAxisRange(0);\n\n        // This is calculating the pixel of the higest value. (Top pixel)\n        var yOffset = g.toDomCoords(null, yar0[1])[1];\n\n        // x y w and h are relative to the corner of the drawing area,\n        // so that the upper corner of the drawing area is (0, 0).\n        var x = offsetX - xOffset;\n        var y = offsetY - yOffset;\n\n        // This is computing the rightmost pixel, effectively defining the\n        // width.\n        var w = g.toDomCoords(g.xAxisRange()[1], null)[0] - xOffset;\n\n        // This is computing the lowest pixel, effectively defining the height.\n        var h = g.toDomCoords(null, yar0[0])[1] - yOffset;\n\n        // Percentage from the left.\n        var xPct = w == 0 ? 0 : (x / w);\n        // Percentage from the top.\n        var yPct = h == 0 ? 0 : (y / h);\n\n        // The (1-) part below changes it from \"% distance down from the top\"\n        // to \"% distance up from the bottom\".\n        return [xPct, (1 - yPct)];\n    }\n\n    private pan = (event, g, context, side) => {\n        context.dragEndX = this.dragGetX_(event, context);\n        context.dragEndY = this.dragGetY_(event, context);\n\n        var minDate = context.initialLeftmostDate - (context.dragEndX - context.dragStartX) * context.xUnitsPerPixel;\n        if (context.boundedDates) {\n            minDate = Math.max(minDate, context.boundedDates[0]);\n        }\n        var maxDate = minDate + context.dateRange;\n        if (context.boundedDates) {\n            if (maxDate > context.boundedDates[1]) {\n                // Adjust minDate, and recompute maxDate.\n                minDate = minDate - (maxDate - context.boundedDates[1]);\n                maxDate = minDate + context.dateRange;\n            }\n        }\n\n        // y-axis scaling is automatic unless this is a full 2D pan.\n        if (context.is2DPan) {\n            var pixelsDragged = context.dragEndY - context.dragStartY;\n            // Adjust each axis appropriately.\n            if (side && (\"r\" == side || \"l\" == side)) {\n                var index = (side == 'l' ? 0 : 1);\n                var axis = g.axes_[index];\n                var axis_data = context.axes[index];\n                var unitsDragged = pixelsDragged * axis_data.unitsPerPixel;\n                var boundedValue = context.boundedValues ? context.boundedValues[index] : null;\n                // In log scale, maxValue and minValue are the logs of those values.\n                var maxValue = axis_data.initialTopValue + unitsDragged;\n                if (boundedValue) {\n                    maxValue = Math.min(maxValue, boundedValue[index]);\n                }\n                var minValue = maxValue - axis_data.dragValueRange;\n\n                if (boundedValue) {\n                    if (minValue < boundedValue[0]) {\n                        // Adjust maxValue, and recompute minValue.\n                        maxValue = maxValue - (minValue - boundedValue[0]);\n                        minValue = maxValue - axis_data.dragValueRange;\n                    }\n                }\n                if (g.attributes_.getForAxis(\"logscale\", index)) {\n                    axis.valueRange = [Math.pow(10, minValue), Math.pow(10, maxValue)];\n                } else {\n                    axis.valueRange = [minValue, maxValue];\n                }\n                // console.debug(axis.valueRange);\n            } else {\n                //\n                var zoomRange = this.dateRange;\n                if (minDate < zoomRange[0] || maxDate > zoomRange[1]) {\n                    // console.info(\"return~~~~\", new Date(minDate), new Date(zoomRange[0]), new Date(maxDate), new Date(zoomRange[1]));\n                    return;\n                }\n                if (g.getOptionForAxis(\"logscale\", \"x\")) {\n                    g.dateWindow_ = [new Date(Math.pow(10, minDate)), new Date(Math.pow(10, maxDate))];\n                } else {\n                    g.dateWindow_ = [new Date(minDate), new Date(maxDate)];\n                }\n            }\n        }\n        g.drawGraph_(false);\n    }\n\n    private adjustAxis = (axis, zoomInPercentage, bias) => {\n        var delta = axis[1] - axis[0];\n        var increment = delta * zoomInPercentage;\n        var foo = [increment * bias, increment * (1 - bias)];\n        return [axis[0] + foo[0], axis[1] - foo[1]];\n    }\n\n    private zoom = (g, zoomInPercentage, xBias, yBias, direction, side, e?) => {\n\n        xBias = xBias || 0.5;\n        yBias = yBias || 0.5;\n        var yAxes = g.axes_;\n        var newYAxes = [];\n        for (var i = 0; i < g.numAxes(); i++) {\n            newYAxes[i] = this.adjustAxis(yAxes[i].valueRange, zoomInPercentage, yBias);\n        }\n\n\n        if ('v' == direction) {\n            if ('l' == side) {\n                yAxes[0]['valueRange'] = newYAxes[0];\n                yAxes[0]['valueWindow'] = newYAxes[0];\n            } else if ('r' == side && g.numAxes() == 2) {\n                yAxes[1]['valueRange'] = newYAxes[1];\n                yAxes[1]['valueWindow'] = newYAxes[1];\n            }\n            g.drawGraph_(false);\n        } else {\n            if (this.scrollTimer) {\n                window.clearTimeout(this.scrollTimer);\n            }\n\n\n            var ranges = g.dateWindow_;\n            if (ranges[0] instanceof Date) {\n                ranges[0] = ranges[0].getTime();\n                ranges[1] = ranges[1].getTime();\n            }\n\n            var newZoomRange = this.adjustAxis(ranges, zoomInPercentage, xBias);\n            // do not bigger than range data\n            var zoomRange = this.dateRange;\n            this.scrollTimer = window.setTimeout(() => {\n                this.callback(e, g.yAxisRanges(), true);\n            }, 500);\n            if (newZoomRange[0] < zoomRange[0] && newZoomRange[1] > zoomRange[1]) {\n                return;\n            } else if (newZoomRange[0] >= newZoomRange[1]) {\n                return;\n            } else if (newZoomRange[0] <= zoomRange[0] && newZoomRange[1] < zoomRange[1]) {\n                g.updateOptions({\n                    dateWindow: [zoomRange[0], newZoomRange[1]]\n                });\n            } else if (newZoomRange[0] > zoomRange[0] && newZoomRange[1] >= zoomRange[1]) {\n                g.updateOptions({\n                    dateWindow: [newZoomRange[0], zoomRange[1]]\n                });\n            } else {\n                g.updateOptions({\n                    dateWindow: [newZoomRange[0], newZoomRange[1]]\n                });\n            }\n        }\n    }\n\n    public mouseUp = (e, g, context) => {\n        // console.debug(\"mouse up\");\n        let currentDatewindow = g.dateWindow_;\n        if (currentDatewindow[0] instanceof Date) {\n            currentDatewindow[0] = currentDatewindow[0].getTime();\n            currentDatewindow[1] = currentDatewindow[1].getTime();\n        }\n\n        context.isPanning = false;\n        Dygraph.endPan(event, g, context);\n        // call upadte this.panEnable = false;\n        if (this.panEnable && this.needRefresh && (this.preDatewindow[0] != currentDatewindow[0] || this.preDatewindow[1] != currentDatewindow[1])) {\n            this.callback(e, g.yAxisRanges(), true);\n            this.panEnable = false;\n        } else if (this.yAxisRangeChanged) {\n            this.callback(e, g.yAxisRanges(), false);\n            this.panEnable = false;\n        }\n    }\n\n    public mouseDown = (e, g, context) => {\n        this.preDatewindow = g.dateWindow_;\n        if (this.preDatewindow[0] instanceof Date) {\n            this.preDatewindow[0] = this.preDatewindow[0].getTime();\n            this.preDatewindow[1] = this.preDatewindow[1].getTime();\n        }\n\n        this.panEnable = true;\n        context.initializeMouseDown(event, g, context);\n        Dygraph.startPan(event, g, context);\n        // console.debug(\"mouse down\", context);\n    }\n\n    public mouseMove = (e, g, context) => {\n        if (this.panEnable && context.isPanning) {\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                this.needRefresh = false;\n                this.yAxisRangeChanged = true;\n                this.pan(e, g, context, 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                this.needRefresh = false;\n                this.yAxisRangeChanged = true;\n                this.pan(e, g, context, 'r');\n            } else {\n                this.needRefresh = true;\n                this.pan(e, g, context, 'h');\n            }\n        }\n    }\n\n    public mouseOut = (e, g, context) => {\n        // console.debug(\"mouse out\");\n        if (this.mouseTimer) {\n            window.clearTimeout(this.mouseTimer);\n        }\n        this.scrollEnable = false;\n\n    }\n\n    public mouseScroll = (e, g, context) => {\n        if (this.scrollEnable) {\n            //\n            var normal;\n\n            if (e instanceof WheelEvent) {\n                normal = e.detail ? e.detail * -1 : e.deltaY / 40;\n            } else {\n                normal = e.detail ? e.detail * -1 : e.wheelDelta / 40;\n            }\n\n            // For me the normalized value shows 0.075 for one click. If I took\n            // that verbatim, it would be a 7.5%.\n            var percentage = normal / 50;\n\n            if (!(e.offsetX && e.offsetY)) {\n                e.offsetX = e.layerX - e.target.offsetLeft;\n                e.offsetY = e.layerY - e.target.offsetTop;\n            }\n            var percentages = this.offsetToPercentage(g, e.offsetX, e.offsetY);\n            var xPct = percentages[0];\n            var yPct = percentages[1];\n            //\n            if (e.offsetX <= (g.plotter_.area.x)) {\n                // left zoom\n                this.zoom(g, percentage, xPct, yPct, 'v', 'l');\n            } else if (e.offsetX >= (g.plotter_.area.x + g.plotter_.area.w)) {\n                // right zoom\n                this.zoom(g, percentage, xPct, yPct, 'v', 'r');\n            } else {\n                // middle zoom\n                this.zoom(g, percentage, xPct, yPct, 'h', null);\n            }\n            this.cancelEvent(e);\n        }\n    }\n\n    public mouseEnter = (e, g, context) => {\n\n        if (this.mouseTimer) {\n            window.clearTimeout(this.mouseTimer);\n        }\n        this.mouseTimer = window.setTimeout(() => {\n            this.scrollEnable = true;\n            // console.debug(\"enable scroll zooming~\");\n        }, 1000);\n    }\n\n\n}","import Dygraph from 'dygraphs';\n\nexport class Synchronizer {\n\n    args: Array<any>;\n    graphs: Array<Dygraph>;\n\n    constructor(graphs: Array<Dygraph>) {\n        this.graphs = graphs;\n        this.args = graphs.concat([{\n            zoom: true,\n            selection: false\n        }]);\n    }\n\n    synchronize = () => {\n        if (this.args.length === 0) {\n            throw 'Invalid invocation of Dygraph.synchronize(). Need >= 1 argument.';\n        }\n\n        var OPTIONS = ['selection', 'zoom', 'range'];\n        var opts = {\n            selection: true,\n            zoom: true,\n            range: true\n        };\n        var dygraphs = [];\n        var prevCallbacks = [];\n\n        var parseOpts = function (obj) {\n            if (!(obj instanceof Object)) {\n                throw 'Last argument must be either Dygraph or Object.';\n            } else {\n                for (var i = 0; i < OPTIONS.length; i++) {\n                    var optName = OPTIONS[i];\n                    if (obj.hasOwnProperty(optName)) opts[optName] = obj[optName];\n                }\n            }\n        };\n\n        var arraysAreEqual = (a, b) => {\n            if (!Array.isArray(a) || !Array.isArray(b)) return false;\n            var i = a.length;\n            if (i !== b.length) return false;\n            while (i--) {\n                if (a[i] !== b[i]) return false;\n            }\n            return true;\n        }\n\n        var attachZoomHandlers = (gs, syncOpts, prevCallbacks) => {\n            var block = false;\n            for (var i = 0; i < gs.length; i++) {\n                var g = gs[i];\n                g.updateOptions({\n                    drawCallback: function (me, initial) {\n                        if (block || initial) return;\n                        block = true;\n                        var opts: { dateWindow: any, valueRange?: any } = {\n                            dateWindow: me.xAxisRange()\n                        };\n                        if (syncOpts.range) opts.valueRange = me.yAxisRange();\n\n                        for (var j = 0; j < gs.length; j++) {\n                            if (gs[j] == me) {\n                                if (prevCallbacks[j] && prevCallbacks[j].drawCallback) {\n                                    prevCallbacks[j].drawCallback.apply(this, arguments);\n                                }\n                                continue;\n                            }\n\n                            // Only redraw if there are new options\n                            if (arraysAreEqual(opts.dateWindow, gs[j].getOption('dateWindow')) &&\n                                arraysAreEqual(opts.valueRange, gs[j].getOption('valueRange'))) {\n                                continue;\n                            }\n\n                            gs[j].updateOptions(opts);\n                        }\n                        block = false;\n                    }\n                }, true /* no need to redraw */);\n            }\n        }\n\n        var attachSelectionHandlers = (gs, prevCallbacks) => {\n            var block = false;\n            for (var i = 0; i < gs.length; i++) {\n                var g = gs[i];\n\n                g.updateOptions({\n                    highlightCallback: function (event, x, points, row, seriesName) {\n                        if (block) return;\n                        block = true;\n                        var me = this;\n                        for (var i = 0; i < gs.length; i++) {\n                            if (me == gs[i]) {\n                                if (prevCallbacks[i] && prevCallbacks[i].highlightCallback) {\n                                    prevCallbacks[i].highlightCallback.apply(this, arguments);\n                                }\n                                continue;\n                            }\n                            var idx = gs[i].getRowForX(x);\n                            if (idx !== null) {\n                                gs[i].setSelection(idx, seriesName);\n                            }\n                        }\n                        block = false;\n                    },\n                    unhighlightCallback: function (event) {\n                        if (block) return;\n                        block = true;\n                        var me = this;\n                        for (var i = 0; i < gs.length; i++) {\n                            if (me == gs[i]) {\n                                if (prevCallbacks[i] && prevCallbacks[i].unhighlightCallback) {\n                                    prevCallbacks[i].unhighlightCallback.apply(this, arguments);\n                                }\n                                continue;\n                            }\n                            gs[i].clearSelection();\n                        }\n                        block = false;\n                    }\n                }, true /* no need to redraw */);\n            }\n        }\n\n\n        if (this.args[0] instanceof Dygraph) {\n            // Arguments are Dygraph objects.\n            for (var i = 0; i < this.args.length; i++) {\n                if (this.args[i] instanceof Dygraph) {\n                    dygraphs.push(this.args[i]);\n                } else {\n                    break;\n                }\n            }\n            if (i < this.args.length - 1) {\n                throw 'Invalid invocation of Dygraph.synchronize(). ' +\n                'All but the last argument must be Dygraph objects.';\n            } else if (i == this.args.length - 1) {\n                parseOpts(this.args[this.args.length - 1]);\n            }\n        } else if (this.args[0].length) {\n            // Invoked w/ list of dygraphs, options\n            for (var i = 0; i < this.args[0].length; i++) {\n                dygraphs.push(this.args[0][i]);\n            }\n            if (this.args.length == 2) {\n                parseOpts(this.args[1]);\n            } else if (this.args.length > 2) {\n                throw 'Invalid invocation of Dygraph.synchronize(). ' +\n                'Expected two arguments: array and optional options argument.';\n            }  // otherwise arguments.length == 1, which is fine.\n        } else {\n            throw 'Invalid invocation of Dygraph.synchronize(). ' +\n            'First parameter must be either Dygraph or list of Dygraphs.';\n        }\n\n        if (dygraphs.length < 2) {\n            throw 'Invalid invocation of Dygraph.synchronize(). ' +\n            'Need two or more dygraphs to synchronize.';\n        }\n\n        var readycount = dygraphs.length;\n        for (var i = 0; i < dygraphs.length; i++) {\n            var g = dygraphs[i];\n            g.ready(function () {\n                if (--readycount == 0) {\n                    // store original callbacks\n                    var callBackTypes = ['drawCallback', 'highlightCallback', 'unhighlightCallback'];\n                    for (var j = 0; j < dygraphs.length; j++) {\n                        if (!prevCallbacks[j]) {\n                            prevCallbacks[j] = {};\n                        }\n                        for (var k = callBackTypes.length - 1; k >= 0; k--) {\n                            prevCallbacks[j][callBackTypes[k]] = dygraphs[j].getFunctionOption(callBackTypes[k]);\n                        }\n                    }\n\n                    // Listen for draw, highlight, unhighlight callbacks.\n                    if (opts.zoom) {\n                        attachZoomHandlers(dygraphs, opts, prevCallbacks);\n                    }\n\n                    if (opts.selection) {\n                        attachSelectionHandlers(dygraphs, prevCallbacks);\n                    }\n                }\n            });\n        }\n\n        return {\n            detach: function () {\n                for (var i = 0; i < dygraphs.length; i++) {\n                    var g = dygraphs[i];\n                    if (opts.zoom) {\n                        g.updateOptions({ drawCallback: prevCallbacks[i].drawCallback });\n                    }\n                    if (opts.selection) {\n                        g.updateOptions({\n                            highlightCallback: prevCallbacks[i].highlightCallback,\n                            unhighlightCallback: prevCallbacks[i].unhighlightCallback\n                        });\n                    }\n                }\n                // release references & make subsequent calls throw.\n                dygraphs = null;\n                opts = null;\n                prevCallbacks = null;\n            },\n            graphs: [this.graphs]\n        };\n    };\n\n\n\n\n}","import Dygraph from \"dygraphs\";\n\nimport { DomAttrs, GraphConfig, ViewConfig, GraphCollection } from \"./metadata/configurations\";\nimport { numberLiteralTypeAnnotation } from \"@babel/types\";\nimport { DropdownButton, DomElementOperator, GraphOperator } from \"./widgets/DomElements\";\n\nimport { Synchronizer } from \"./extras/synchronizer\";\n\nexport default class FgpGraph {\n\n    private graphContainer: HTMLElement;\n\n    private header: HTMLElement;\n\n    private body: HTMLElement;\n\n    private bottom: HTMLElement;\n\n    private graph: Dygraph;\n\n    private rangeBarGraph: Dygraph;\n\n    private viewConfigs: Array<ViewConfig>;\n\n    private defaultGraphRanges: Array<{ name: string, value: number, show?: boolean }>;\n\n    private parentDom: HTMLElement;\n\n    private viewsDropdown: HTMLElement;\n\n    private intervalsDropdown: HTMLElement;\n\n    private intervalLabelsArea: HTMLElement;\n\n    private seriesDropdown: HTMLElement;\n\n    private fieldPattern = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n    private childrenGraphs: Array<FgpGraph> = [];\n\n    // store locally\n    private rangeBarData: any = [];\n\n    public serialnumber = -1;\n\n    private operator: GraphOperator;\n\n    constructor(dom: HTMLElement, viewConfigs: Array<ViewConfig>) {\n\n        this.defaultGraphRanges = [\n            { name: \"3 days\", value: (1000 * 60 * 60 * 24 * 3), show: true },\n            { name: \"7 days\", value: 604800000, show: true },\n            { name: \"1 month\", value: 2592000000, show: false }\n        ];\n        this.parentDom = dom;\n\n        this.serialnumber = (Math.random() * 10000 | 0) + 1;\n        // console.debug(\"serialNumber\", this.serialnumber);\n\n        let viewsDropdownAttrs: Array<DomAttrs> = [{ key: 'class', value: \"fgp-views-dropdown\" }];\n        this.viewsDropdown = DomElementOperator.createElement('select', viewsDropdownAttrs);\n\n        let intervalsDropdownAttrs: Array<DomAttrs> = [{ key: 'class', value: \"fgp-intervals-dropdown\" }];\n        this.intervalsDropdown = DomElementOperator.createElement('select', intervalsDropdownAttrs);\n\n        let intervalsLabelsAttrs: Array<DomAttrs> = [{ key: 'class', value: \"fgp-interval-labels\" }];\n        this.intervalLabelsArea = DomElementOperator.createElement('div', intervalsLabelsAttrs);\n\n        let seriesDropdownAttrs: Array<DomAttrs> = [{ key: 'class', value: \"fgp-series-dropdown\" }];\n        this.seriesDropdown = DomElementOperator.createElement('div', seriesDropdownAttrs);\n\n        let headerAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-header' }];\n        this.header = DomElementOperator.createElement('div', headerAttrs);\n        this.header.appendChild(this.viewsDropdown);\n        this.header.appendChild(this.intervalsDropdown);\n        this.header.appendChild(this.seriesDropdown);\n        this.header.appendChild(this.intervalLabelsArea);\n        // create doms\n        let containerAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-container noselect' }];\n        this.graphContainer = DomElementOperator.createElement('div', containerAttrs);\n        this.graphContainer.appendChild(this.header);\n\n        let bodyAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-body' }];\n        this.body = DomElementOperator.createElement('div', bodyAttrs);\n        this.graphContainer.appendChild(this.body);\n        this.parentDom.appendChild(this.graphContainer);\n        this.viewConfigs = viewConfigs;\n    }\n\n    private datewindowHandler = (datewindow: Array<number>) => {\n\n        this.childrenGraphs.forEach(graph => {\n            // call updateDatewinow\n            if (graph.serialnumber != this.serialnumber) {\n                graph.updateDatewinow(datewindow);\n            }\n        });\n\n    }\n\n\n\n    /**\n     * init graph with configuration\n     *\n     * @private\n     * @memberof FgpGraph\n     */\n    public initGraph = () => {\n        this.operator = new GraphOperator(this.graph, this.rangeBarGraph, this.graphContainer, this.body, this.intervalsDropdown, this.header, this.datewindowHandler);\n        // which \"view\" should be shown first? device or scatter?\n        if (this.viewConfigs) {\n            let showView: ViewConfig = null;\n            let dropdownOpts: Array<{ id: string, label: string, selected?: boolean }> = [];\n            this.viewConfigs.forEach(view => {\n                if (view.show) {\n                    // init graph \n                    showView = view;\n                }\n                dropdownOpts.push({ id: view.name, label: view.name, selected: view.show });\n            });\n            // add options into view dropdown list\n            const viewsDropdonwOptions = new DropdownButton(<HTMLSelectElement>this.viewsDropdown, [...dropdownOpts]);\n            viewsDropdonwOptions.render();\n            // add callback handler\n            this.viewsDropdown.onchange = (e) => {\n                const choosedView = (<HTMLSelectElement>e.target).value;\n                // change view\n                // console.debug(\"Current View: \", choosedView);\n                // find view \n                this.viewConfigs.forEach(config => {\n                    if (config.name === choosedView) {\n                        this.operator.init(config, (graph) => {\n                            this.graph = graph;\n\n                            this.childrenGraphs.forEach(graph => {\n                                // call updateDatewinow\n                                if (graph.serialnumber != this.serialnumber) {\n                                    // update data\n                                    graph.operator.refresh();\n                                }\n                            });\n\n                        }, () => {\n                            this.childrenGraphs.forEach(graph => {\n                                // call updateDatewinow\n                                if (graph.serialnumber != this.serialnumber) {\n                                    // update data\n                                    graph.operator.refresh();\n                                }\n                            });\n                        });\n                    }\n                });\n            }\n\n            if (showView) {\n                this.operator.init(showView, (graph) => {\n                    this.graph = graph;\n                }, () => {\n                    this.childrenGraphs.forEach(graph => {\n                        // call updateDatewinow\n                        if (graph.serialnumber != this.serialnumber) {\n                            // update data\n                            graph.operator.refresh();\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n\n\n\n    public updateDatewinow = (datewindow: Array<number>) => {\n        // update graph \n        if (this.graph) {\n            const range: Array<number> = this.graph.xAxisRange();\n            // if datewindow same then ignorn that\n            if (range[0] != datewindow[0] || range[1] != datewindow[1]) {\n                this.graph.updateOptions({\n                    dateWindow: datewindow\n                });\n            }\n        }\n    }\n\n    public setChildren = (graphs: Array<FgpGraph>) => {\n        this.childrenGraphs = this.childrenGraphs.concat(graphs);\n    }\n\n\n}","import Dygraph from 'dygraphs';\nimport { ViewConfig, GraphCollection, DomAttrs, GraphSeries, Entity } from '../metadata/configurations';\nimport moment from 'moment-timezone';\nimport { Synchronizer } from '../extras/synchronizer';\nimport { DataHandler } from '../services/dataService';\nimport { GraphInteractions } from '../extras/interactions';\nimport { Formatters } from '../extras/formatters';\nimport { arrayExpression } from '@babel/types';\n\nexport class DropdownButton {\n\n    private select: HTMLSelectElement;\n\n    private btns: Array<{ id: string, label: string, selected?: boolean }>;\n    constructor(select: HTMLSelectElement, buttons: Array<{ id: string, label: string, selected?: boolean, formatter?: any }>) {\n        this.select = select;\n        this.btns = buttons;\n    }\n\n    /**\n     * generate options\n     *\n     * @memberof DropdownButton\n     */\n    render = () => {\n        // remove all first\n        this.select.innerHTML = '';\n        this.btns.forEach(element => {\n            let opt: HTMLOptionElement = document.createElement('option');\n            opt.text = element.label;\n            opt.value = element.id;\n            if (element.selected) {\n                opt.selected = true;\n            }\n            // add it into select\n            this.select.add(opt);\n        });\n    }\n}\n\n\nexport class DropdownMenu {\n    private dropdown: HTMLElement; // div\n    private opts: Array<{ checked: boolean, name: string, label: string }>;\n    private callback: any;\n\n    constructor(dropdownArea: HTMLElement, opts: Array<{ checked: boolean, name: string, label: string }>, callback: any) {\n        this.dropdown = dropdownArea;\n        this.opts = opts;\n        this.callback = callback;\n    }\n    render = () => {\n        this.dropdown.innerHTML = '';\n        let div: HTMLElement = document.createElement('div');\n        div.setAttribute(\"class\", \"fgp-graphs-dropdown\");\n        //\n        let span: HTMLElement = document.createElement('div');\n        span.innerHTML = `\n        <select>\n            <option disabled selected>series</option>\n        </select>`;\n        let content: HTMLElement = document.createElement('ul');\n        content.setAttribute('class', \"dropdown-content\");\n\n        // add options\n        this.opts.forEach(opt => {\n            // create li\n            let li: HTMLElement = document.createElement('li');\n            let checkbox: HTMLElement = document.createElement('input');\n            checkbox.setAttribute(\"type\", \"checkbox\");\n            if (opt.checked) {\n                checkbox.setAttribute(\"checked\", \"checked\");\n                checkbox.setAttribute(\"data-value\", opt.label);\n            }\n            checkbox.addEventListener(\"click\", (e) => {\n                //\n                let series = (<HTMLInputElement>e.target).getAttribute(\"data-value\");\n                let checked = (<HTMLInputElement>e.target).checked;\n                // console.debug(\"series: \", series, checked);\n                // update graph with callback function\n                this.callback(series, checked);\n            });\n            li.appendChild(checkbox);\n            li.append(' ' + opt.label);\n            content.appendChild(li);\n        });\n        //\n        div.appendChild(span);\n        div.appendChild(content);\n        this.dropdown.appendChild(div);\n    }\n}\n\n\nexport class SelectWithCheckbox {\n\n    private select: HTMLSelectElement;\n    private opts: Array<{ checked: boolean, name: string, label: string }>;\n\n    constructor(select: HTMLSelectElement, opts: Array<{ checked: boolean, name: string, label: string }>) {\n        this.select = select;\n        this.opts = opts;\n    }\n\n    render = () => {\n        this.select.innerHTML = \"\";\n        // create options\n        this.opts.forEach(opt => {\n            let optElement: HTMLOptionElement = document.createElement('option');\n            let checkbox: HTMLInputElement = document.createElement('input');\n            checkbox.setAttribute(\"type\", \"checkbox\");\n            optElement.appendChild(checkbox);\n            optElement.append(opt.label);\n            this.select.add(optElement);\n        });\n    }\n\n}\n\n\nexport class DomElementOperator {\n\n    static createElement = (type: string, attrs: Array<DomAttrs>): HTMLElement => {\n        let dom: HTMLElement = document.createElement(type);\n        let errorHappened = false;\n        // put attributes on element\n        attrs.forEach(attr => {\n            // check the attribute, if exist then throw exception\n            if (!dom.getAttribute(attr.key)) {\n                dom.setAttribute(attr.key, attr.value);\n            } else {\n                throw new Error(\"Duplicate Attrs \" + attr.key);\n            }\n\n        });\n        return dom;\n    }\n\n}\n\n\n\nexport class GraphOperator {\n\n    public static FIELD_PATTERN = new RegExp(/data[.]{1}[a-zA-Z0-9]+/g);\n\n    defaultGraphRanges: Array<{ name: string, value: number, show?: boolean }> = [\n        { name: \"3 days\", value: (1000 * 60 * 60 * 24 * 3), show: true },\n        { name: \"7 days\", value: 604800000, show: true },\n        { name: \"1 month\", value: 2592000000, show: false }\n    ];\n\n    createElement = (type: string, attrs: Array<DomAttrs>): HTMLElement => {\n        let dom: HTMLElement = document.createElement(type);\n        // put attributes on element\n        attrs.forEach(attr => {\n            dom.setAttribute(attr.key, attr.value);\n        });\n\n        return dom;\n    }\n\n    private mainGraph: Dygraph;\n\n    private ragnebarGraph: Dygraph;\n\n    private currentView: ViewConfig;\n\n    private currentCollection: GraphCollection;\n\n    private rangeCollection: GraphCollection;\n\n    private start: number;\n\n    private end: number;\n\n    public datewindowCallback: any;\n\n    private graphContainer: HTMLElement;\n    private graphBody: HTMLElement;\n    private intervalsDropdown: HTMLElement;\n    private header: HTMLElement;\n\n    private yAxisRanges = [];\n\n    constructor(mainGraph: Dygraph, rangeGraph: Dygraph, graphContainer: HTMLElement, graphBody: HTMLElement, intervalsDropdown: HTMLElement, header: HTMLElement, datewindowCallback: any) {\n        this.mainGraph = mainGraph;\n        this.ragnebarGraph = rangeGraph;\n        this.graphContainer = graphContainer;\n        this.datewindowCallback = datewindowCallback;\n        this.graphBody = graphBody;\n        this.intervalsDropdown = intervalsDropdown;\n        this.header = header\n    }\n\n    /**\n     * update labels\n     *\n     * @private\n     * @memberof GraphOperator\n     */\n    private updateCollectionLabels = (header: HTMLElement, entities: Array<Entity>, choosedCollection: GraphCollection, collections: Array<GraphCollection>) => {\n        // \n        let labels = header.getElementsByClassName('fgp-interval-labels');// should only have one.\n        let firstLabelArea: any = null;\n        for (let i = 0; i < labels.length; i++) {\n            const element = labels[i];\n            element.innerHTML = ''; // remove all child\n            if (i == 0) {\n                firstLabelArea = element;\n            }\n        }\n\n        // add children\n        collections.forEach(_collection => {\n            //\n            let labelAttrs: Array<DomAttrs> = [{ key: 'class', value: 'badge badge-pill badge-secondary' }];\n            if (_collection.name == choosedCollection.name) {\n                labelAttrs = [{ key: 'class', value: 'badge badge-pill badge-success' }];\n            }\n            let label: HTMLElement = this.createElement('span', labelAttrs);\n            label.innerText = _collection.label;\n            firstLabelArea.appendChild(label);\n        });\n\n\n    }\n\n\n    private updateSeriesDropdown = (header: HTMLElement, series: Array<any>, graph: Dygraph) => {\n        let dropdown = header.getElementsByClassName('fgp-series-dropdown');// should only have one.\n\n        if (dropdown && dropdown[0]) {\n            dropdown[0].innerHTML = \"\";\n        }\n        let select: HTMLElement = <HTMLSelectElement>this.createElement(\"div\", []);\n        dropdown[0].appendChild(select);\n\n        let opts: Array<{ checked: boolean, name: string, label: string }> = [];\n        series.forEach(_series => {\n\n            opts.push(\n                { checked: true, name: _series, label: _series }\n            );\n        });\n\n        // new SelectWithCheckbox(select, opts).render();\n\n        new DropdownMenu(select, opts, (series, checked) => {\n            let visibility: Array<boolean> = graph.getOption('visibility');\n            let labels: Array<string> = graph.getLabels();\n\n            labels.forEach((label, index) => {\n                if (label == series) {\n                    visibility[index - 1] = checked;\n                }\n            });\n            graph.updateOptions({\n                visibility: visibility\n            });\n\n        }).render();\n    }\n\n\n\n\n    init = (view: ViewConfig, readyCallback?: any, interactionCallback?: any) => {\n        this.currentView = view;\n        let formatters: Formatters = new Formatters(this.currentView.timezone ? this.currentView.timezone : moment.tz.guess());\n        let entities: Array<string> = [];\n        let bottomAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-bottom' }];\n        let bottom = null;\n\n        this.currentView.graphConfig.entities.forEach(entity => {\n            entities.push(entity.id);\n        });\n\n        // find fields from configuration\n        let timewindowEnd: number = moment.tz(this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).add(1, 'days').startOf('day').valueOf();\n        let timewindowStart: number = moment.tz(this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).subtract(7, 'days').startOf('day').valueOf();   // default 7 days\n        const ranges: Array<{ name: string, value: number, show?: boolean }> = this.currentView.ranges;\n        if (ranges.length > 0) {\n            // get first \"show\" == true\n            const selected = ranges.find((value, index, arr) => {\n                if (value.show) {\n                    return value;\n                }\n            });\n            // not found then use first one\n            if (!selected) {\n                // just need to change start\n                timewindowStart = moment.tz(this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).add(1, 'days').startOf('day').valueOf() - ranges[0].value;\n            } else {\n                timewindowStart = moment.tz(this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).add(1, 'days').startOf('day').valueOf() - selected.value;\n            }\n        }\n\n        // which one should be shown first? base on current window size? or base on the collection config?\n\n        // get default time range from graph config\n        let graphRangesConfig = this.defaultGraphRanges;\n        if (this.currentView.ranges) {\n            graphRangesConfig = this.currentView.ranges;\n        }\n\n        let dropdownOpts: Array<{ id: string, label: string, selected?: boolean }> = [];\n        graphRangesConfig.forEach(config => {\n            dropdownOpts.push(\n                { id: config.name, label: config.name, selected: config.show }\n            );\n        });\n\n        let choosedCollection: GraphCollection = null;\n\n        const intervalsDropdonwOptions = new DropdownButton(<HTMLSelectElement>this.intervalsDropdown, [...dropdownOpts]);\n        intervalsDropdonwOptions.render();\n\n        this.intervalsDropdown.onchange = (e) => {\n            const intervalDropdown: HTMLSelectElement = <HTMLSelectElement>e.currentTarget;\n            graphRangesConfig.forEach(config => {\n                if (config.name == intervalDropdown.value) {\n                    // if ragnebar graph not exist, ignore it.\n                    if (this.ragnebarGraph) {\n                        this.ragnebarGraph.updateOptions({\n                            dateWindow: [new Date(timewindowEnd - config.value), new Date(timewindowEnd)]\n                        });\n                    }\n\n                    // find the correct collection and update graph\n                    choosedCollection = this.currentView.graphConfig.collections.find((collection) => {\n                        return collection.threshold && (timewindowEnd - (timewindowEnd - config.value)) <= (collection.threshold.max);\n                    });\n\n                    //update \n                    this.mainGraph = this.mainGraph;\n                    this.ragnebarGraph = this.ragnebarGraph;\n                    this.currentCollection = choosedCollection;\n                    this.currentView = this.currentView;\n                    this.rangeCollection = this.currentView.graphConfig.rangeCollection;\n                    this.start = (timewindowEnd - config.value);\n                    this.end = timewindowEnd;\n\n                    this.update();\n                    this.updateCollectionLabels(this.header, this.currentView.graphConfig.entities, choosedCollection, this.currentView.graphConfig.collections);\n                    if (interactionCallback) {\n                        // ready to update children\n                        interactionCallback();\n                    }\n                }\n            });\n        };\n\n        // get fields\n        let fieldsForCollection = [];\n        // get range config and find the first and last\n        this.currentView.graphConfig.rangeCollection.series.forEach(series => {\n            let _tempFields = (series.exp).match(GraphOperator.FIELD_PATTERN);\n            // replace all \"data.\"\" with \"\"\n            _tempFields = _tempFields.map(exp => exp.replace(\"data.\", \"\"));\n            // put fields together\n            fieldsForCollection = fieldsForCollection.concat(_tempFields);\n        });\n\n\n        // \n        this.currentView.dataService.fetchFirstNLast(entities, this.currentView.graphConfig.rangeCollection.name, Array.from(new Set(fieldsForCollection))).then(resp => {\n            // get first and last records, just need start and end timestamp\n            let first: any = { timestamp: moment.tz(this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).valueOf() };\n            let last: any = { timestamp: 0 };\n            // get all first and last then find out which first is the smalllest and last is the largest\n            entities.forEach(entity => {\n                //\n                resp.forEach(entityData => {\n                    if (entityData.id == entity) {\n                        if (entityData.data && entityData.data.first && entityData.data.first.timestamp) {\n                            //\n                            if (first.timestamp > entityData.data.first.timestamp) {\n                                first = entityData.data.first;\n                            }\n                        }\n\n                        if (entityData.data && entityData.data.last && entityData.data.last.timestamp) {\n                            //\n                            if (last.timestamp < entityData.data.last.timestamp) {\n                                last = entityData.data.last;\n                            }\n                        }\n                    }\n                });\n            });\n\n            // init empty graph with start and end  no other data\n            let firstRanges = graphRangesConfig.find(range => range.show && range.show == true);\n            if (!firstRanges) {\n                // throw errors;\n                throw new Error(\"non default range for range-bar!\");\n            }\n\n            // get fields and labels\n            this.currentView.graphConfig.collections.forEach(collection => {\n                // if there is a config for what level need to show.\n                if (collection.threshold && firstRanges.value) {\n                    //  >= && <    [ in the middle  )\n                    if (firstRanges.value >= collection.threshold.min && firstRanges.value < collection.threshold.max) {\n                        this.currentCollection = choosedCollection = collection;\n\n                    }\n                }\n            });\n\n            // get choosed collection by width....\n            if (!choosedCollection && firstRanges) {\n                // cal with width\n                const width: number = this.graphContainer.offsetWidth;\n                //\n                const pointsCanBeShown: number = Math.round(width * .9);\n                this.currentView.graphConfig.collections.forEach(collection => {\n                    // how many points in this interval\n                    if ((firstRanges.value / collection.interval) <= pointsCanBeShown) {\n                        if (!choosedCollection) {\n                            this.currentCollection = choosedCollection = collection;\n                        } else if (choosedCollection.interval > collection.interval) {\n                            this.currentCollection = choosedCollection = collection;\n                        }\n                    }\n                });\n            }\n\n            let initialData = [[new Date(first.timestamp)], [new Date(last.timestamp)]];\n            let isY2: boolean = false;\n            let mainGraphLabels: Array<string> = [];\n\n\n            if (entities.length == 1) {\n                mainGraphLabels = [];\n                choosedCollection.series.forEach((series, _index) => {\n                    mainGraphLabels.push(series.label);\n                    initialData.forEach(_data => {\n                        _data[_index + 1] = null;\n                    });\n                    if (series.yIndex == \"right\") {\n                        isY2 = true;\n                    }\n                });\n\n            } else if (entities.length > 1 && choosedCollection.series && choosedCollection.series[0]) {\n                mainGraphLabels = [];\n                entities.forEach((entity, _index) => {\n                    mainGraphLabels.push(entity);\n                    initialData.forEach(_data => {\n                        _data[_index + 1] = null;\n                    });\n                });\n            }\n\n            let yScale = null;\n            let y2Scale = null;\n            // check if there is a init scale\n            if (choosedCollection.initScales) {\n                if (choosedCollection.initScales.left) {\n                    yScale = {\n                        valueRange: [choosedCollection.initScales.left.min, choosedCollection.initScales.left.max]\n                    };\n                }\n                if (choosedCollection.initScales.right) {\n                    y2Scale = {\n                        valueRange: [choosedCollection.initScales.right.min, choosedCollection.initScales.right.max]\n                    };\n                }\n\n            }\n            let currentDatewindowOnMouseDown = [];\n\n            const datewindowChangeFunc = (e, yAxisRange?: Array<Array<number>>) => {\n                let datewindow = [];\n\n                if (this.ragnebarGraph) {\n                    datewindow = this.ragnebarGraph.xAxisRange();\n                } else {\n                    datewindow = this.mainGraph.xAxisRange();\n                }\n                // check\n\n                if (datewindow[0] instanceof Date) {\n                    datewindow[0] = datewindow[0].getTime();\n                }\n\n                if (datewindow[1] instanceof Date) {\n                    datewindow[1] = datewindow[1].getTime();\n                }\n\n                if (datewindow[0] == currentDatewindowOnMouseDown[0] && datewindow[1] == currentDatewindowOnMouseDown[1]) {\n                    // console.debug(\"no change!\");\n                } else {\n                    // fetch data again \n                    // sorting\n                    this.currentView.graphConfig.collections.sort((a, b) => {\n                        return a.interval > b.interval ? 1 : -1;\n                    });\n\n                    choosedCollection = this.currentView.graphConfig.collections.find((collection) => {\n                        return collection.threshold && (datewindow[1] - datewindow[0]) <= (collection.threshold.max);\n                    });\n                    let collection: GraphCollection = { label: \"\", name: \"\", series: [], interval: 0, initScales: { left: { min: 0, max: 0 }, right: { min: 0, max: 0 } } };\n                    Object.assign(collection, choosedCollection);\n\n                    if (yAxisRange) {\n                        yAxisRange.forEach((element, _index) => {\n                            if (_index == 0) {\n                                //left\n                                if (!collection.initScales.left) {\n                                    collection.initScales.left = { min: 0, max: 0 };\n                                }\n                                collection.initScales.left.min = element[0];\n                                collection.initScales.left.max = element[1];\n                            } else if (_index == 1) {\n                                if (!collection.initScales.right) {\n                                    collection.initScales.right = { min: 0, max: 0 };\n                                }\n                                collection.initScales.right.min = element[0];\n                                collection.initScales.right.max = element[1];\n                            }\n                        });\n                    }\n                    this.currentCollection = collection;\n                    this.rangeCollection = this.currentView.graphConfig.rangeCollection;\n\n                    this.start = datewindow[0];\n                    this.end = datewindow[1];\n\n                    this.update();\n                    this.updateCollectionLabels(this.header, this.currentView.graphConfig.entities, choosedCollection, this.currentView.graphConfig.collections);\n                }\n            }\n\n            let callbackFuncForInteractions = (e, yAxisRange, refreshData) => {\n                if (refreshData) {\n                    datewindowChangeFunc(e, yAxisRange);\n                } else {\n                    // set initsacle\n                    if (yAxisRange) {\n                        yAxisRange.forEach((element, _index) => {\n                            if (_index == 0) {\n                                //left\n                                if (!this.currentCollection.initScales.left) {\n                                    this.currentCollection.initScales.left = { min: 0, max: 0 };\n                                }\n                                this.currentCollection.initScales.left.min = element[0];\n                                this.currentCollection.initScales.left.max = element[1];\n                            } else if (_index == 1) {\n                                if (!this.currentCollection.initScales.right) {\n                                    this.currentCollection.initScales.right = { min: 0, max: 0 };\n                                }\n                                this.currentCollection.initScales.right.min = element[0];\n                                this.currentCollection.initScales.right.max = element[1];\n                            }\n                        });\n                    }\n\n                }\n\n\n                if (interactionCallback) {\n                    // ready to update children\n                    interactionCallback();\n                }\n            };\n\n\n            let dateLabelLeftAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-range-bar-date-label-left' }];\n            let startLabelLeft: HTMLElement = DomElementOperator.createElement('label', dateLabelLeftAttrs);\n            let dateLabelRightAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-range-bar-date-label-right' }];\n            let endLabelRight: HTMLElement = DomElementOperator.createElement('label', dateLabelRightAttrs);\n\n            // create a interaction model instance\n            let interactionModel: GraphInteractions = new GraphInteractions(callbackFuncForInteractions, [first.timestamp, last.timestamp]);\n            let currentSelection = \"\";\n            this.mainGraph = new Dygraph(this.graphBody, initialData, {\n                labels: ['x'].concat(mainGraphLabels),\n                ylabel: choosedCollection.yLabel,\n                y2label: choosedCollection.y2Label,\n                rangeSelectorHeight: 30,\n                legend: \"follow\",\n                legendFormatter: this.currentView.graphConfig.features.legend ? this.currentView.graphConfig.features.legend : formatters.legendForSingleSeries,\n                labelsKMB: true,\n                axes: {\n                    x: {\n                        axisLabelFormatter: formatters.axisLabel\n                    },\n                    y: yScale,\n                    y2: y2Scale\n                },\n                highlightSeriesOpts: { strokeWidth: 1 },\n                highlightCallback: (e, x, ps, row, seriesName) => {\n                    if (this.currentView.interaction && this.currentView.interaction.callback && this.currentView.interaction.callback.highlighCallback) {\n                        this.currentView.interaction.callback.highlighCallback(x, seriesName, ps);\n                    }\n                    currentSelection = seriesName;\n                },\n                clickCallback: (e, x, points) => {\n                    if (this.currentView.interaction && this.currentView.interaction.callback && this.currentView.interaction.callback.selectCallback) {\n                        this.currentView.interaction.callback.selectCallback(currentSelection);\n                    }\n                },\n                interactionModel: {\n                    'mousedown': interactionModel.mouseDown,\n                    'mouseup': interactionModel.mouseUp,\n                    'mousemove': interactionModel.mouseMove,\n                    'mousewheel': interactionModel.mouseScroll,\n                    'DOMMouseScroll': interactionModel.mouseScroll,\n                    'wheel': interactionModel.mouseScroll,\n                    'mouseenter': interactionModel.mouseEnter,\n                },\n                drawCallback: (dygraph, is_initial) => {\n                    const xAxisRange: Array<number> = dygraph.xAxisRange();\n                    if (this.currentView.graphConfig.features.rangeBar && this.currentView.graphConfig.rangeCollection) {\n                        startLabelLeft.innerHTML = moment.tz(xAxisRange[0], this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).format('lll z');\n                        endLabelRight.innerHTML = moment.tz(xAxisRange[1], this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).format('lll z');\n                    }\n                    // update datewindow\n                    this.datewindowCallback(xAxisRange);\n                }\n            });\n\n            // remove first\n            if (this.graphContainer.getElementsByClassName(\"fgp-graph-bottom\").length > 0) {\n                let bottoms = this.graphContainer.getElementsByClassName(\"fgp-graph-bottom\");\n                for (var i = 0; i < bottoms.length; i++) {\n                    this.graphContainer.removeChild(bottoms[i]);\n                }\n            }\n            // range-bar?\n            if (this.currentView.graphConfig.features.rangeBar && this.currentView.graphConfig.rangeCollection) {\n                let labels: Array<string> = [];\n                let firstData = [new Date(first.timestamp)];\n                let lastData = [new Date(last.timestamp)];\n                let rangeSeries = null;\n                this.rangeCollection = this.currentView.graphConfig.rangeCollection;\n                // range device always one\n                rangeSeries = {};\n                // check if ther is a y2\n                this.currentView.graphConfig.rangeCollection.series.forEach((series, _index) => {\n                    labels.push(series.label);\n                    firstData[_index + 1] = null;\n                    lastData[_index + 1] = null;\n                    rangeSeries[series.label] = {\n                        axis: (series.yIndex == \"left\" || !series.yIndex) ? 'y' : 'y2'\n                    };\n                });\n\n                if (isY2) {\n                    labels.push(\"y2\");\n                    rangeSeries[\"y2\"] = {\n                        axis: \"y2\"\n                    };\n                    firstData.push(null);\n                    lastData.push(null);\n                }\n\n                // create 2 labels for start and end\n\n                let dateLabels: HTMLElement = DomElementOperator.createElement('div', [{ key: 'style', value: 'height:22px;' }]);\n                dateLabels.appendChild(startLabelLeft);\n                dateLabels.appendChild(endLabelRight);\n                bottom = DomElementOperator.createElement('div', bottomAttrs);\n                bottom.appendChild(dateLabels);\n                let rangeBarAttrs: Array<DomAttrs> = [{ key: 'class', value: 'fgp-graph-rangebar' }];\n                let rangeBar: HTMLElement = DomElementOperator.createElement('div', rangeBarAttrs);\n                bottom.appendChild(rangeBar);\n                this.graphContainer.appendChild(bottom);\n                //create range-bar graph\n                this.ragnebarGraph = new Dygraph(rangeBar, [\n                    firstData,   // first\n                    lastData    // last\n                ], {\n                        xAxisHeight: 0,\n                        axes: {\n                            x: { drawAxis: false },\n                            y: {\n                                axisLabelWidth: 60\n                            },\n                            y2: {\n                                axisLabelWidth: 60\n                            }\n                        },\n                        labels: ['x'].concat(labels),\n                        // series: rangeSeries,\n                        showRangeSelector: true,\n                        rangeSelectorHeight: 30,\n                        legend: 'never',\n                        drawCallback: (dygraph, is_initial) => {\n                            const xAxisRange: Array<number> = dygraph.xAxisRange();\n                            startLabelLeft.innerHTML = moment.tz(xAxisRange[0], this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).format('lll z');\n                            endLabelRight.innerHTML = moment.tz(xAxisRange[1], this.currentView.timezone ? this.currentView.timezone : moment.tz.guess()).format('lll z');\n                            this.datewindowCallback(xAxisRange);\n                        }\n                    });\n\n                // check \n                let sync = new Synchronizer([this.ragnebarGraph, this.mainGraph]);\n                sync.synchronize();\n                // readyCallback(this.mainGraph);\n                let rangeBarCanvas = (rangeBar.getElementsByClassName(\"dygraph-rangesel-fgcanvas\")[0]);\n                let rangeBarHandles = rangeBar.getElementsByClassName(\"dygraph-rangesel-zoomhandle\");\n                const rangebarMousedownFunc = (e) => {\n                    // check\n                    const datewindow = this.ragnebarGraph.xAxisRange();\n                    if (datewindow[0] instanceof Date) {\n                        datewindow[0] = datewindow[0].getTime();\n                    }\n\n                    if (datewindow[1] instanceof Date) {\n                        datewindow[1] = datewindow[1].getTime();\n                    }\n                    currentDatewindowOnMouseDown = datewindow;\n\n\n                    window.addEventListener(\"mouseup\", (e) => {\n                        datewindowChangeFunc(e, null);\n\n                        if (interactionCallback) {\n                            // ready to update children\n                            interactionCallback();\n                        }\n                    }, { once: true });\n                }\n\n\n                for (let i = 0; i < rangeBarHandles.length; i++) {\n                    const element = rangeBarHandles[i];\n                    let style = element.getAttribute(\"style\");\n                    style.replace(\"z-index: 10;\", \"z-index: \" + (10 + i) + \";\");\n                    element.setAttribute(\"style\", style);\n                    element.addEventListener('mousedown', rangebarMousedownFunc);\n                }\n\n                // add mouse listener \n                rangeBarCanvas.addEventListener('mousedown', rangebarMousedownFunc);\n            } else {\n\n            }\n            // update datewindow\n            this.mainGraph.updateOptions({\n                dateWindow: [new Date(timewindowStart), new Date(timewindowEnd)]\n            });\n\n            this.start = timewindowStart;\n            this.end = timewindowEnd;\n\n            this.update(first.timestamp, last.timestamp);\n            // send \"ready\" after update \n            readyCallback(this.mainGraph);\n            this.updateCollectionLabels(this.header, this.currentView.graphConfig.entities, choosedCollection, this.currentView.graphConfig.collections);\n            const seriesName = [];\n            if (this.currentView.graphConfig.entities.length > 1) {\n                this.currentView.graphConfig.entities.forEach(entity => {\n                    seriesName.push(entity.name);\n                });\n            } else {\n                // single device with multiple lines\n                choosedCollection.series.forEach(series => {\n                    seriesName.push(series.label);\n                });\n            }\n\n            this.updateSeriesDropdown(this.header, seriesName, this.mainGraph);\n\n        });\n    }\n\n\n    refresh = () => {\n        const xAxisRange: Array<number> = this.mainGraph.xAxisRange();\n\n        let datewindow = [];\n\n        if (xAxisRange) {\n            datewindow[0] = xAxisRange[0];\n            datewindow[1] = xAxisRange[1];\n        }\n\n        // get correct collection then call update\n        if (datewindow[0] == this.start && datewindow[1] == this.end) {\n            // console.debug(\"no change!\");\n        } else {\n            this.start = datewindow[0];\n            this.end = datewindow[1];\n\n            this.currentView.graphConfig.collections.sort((a, b) => {\n                return a.interval > b.interval ? 1 : -1;\n            });\n\n            this.currentCollection = this.currentView.graphConfig.collections.find((collection) => {\n                return collection.threshold && (datewindow[1] - datewindow[0]) <= (collection.threshold.max);\n            });\n            let collection: GraphCollection = { label: \"\", name: \"\", series: [], interval: 0, initScales: { left: { min: 0, max: 0 }, right: { min: 0, max: 0 } } };\n            Object.assign(collection, this.currentCollection);\n            // check initScale\n\n\n\n            this.update();\n            this.updateCollectionLabels(this.header, this.currentView.graphConfig.entities, this.currentCollection, this.currentView.graphConfig.collections);\n        }\n\n\n    }\n\n\n    update = (first?: number, last?: number) => {\n        let mainGraph = this.mainGraph;\n        let rangebarGraph = this.ragnebarGraph;\n        let graphCollection = this.currentCollection;\n        let rangeCollection = this.rangeCollection;\n        let start = this.start;\n        let end = this.end;\n\n        let view = this.currentView;\n\n        let formatters: Formatters = new Formatters(view.timezone ? view.timezone : moment.tz.guess());\n        let mainGraphColors: Array<string> = [];\n        // get data for main graph\n        // main graph entities\n        const mainEntities: Array<string> = [];\n        view.graphConfig.entities.forEach(entity => {\n            mainEntities.push(entity.id);\n        });\n\n        // get fields for main graph\n        let fieldsForMainGraph = [];\n        let yAxis = { min: null, max: null };\n        let yAxis2 = { min: null, max: null };\n        let yIndexs: Array<number> = [];\n        let y2Indexs: Array<number> = [];\n        let colors: Array<string> = [];\n        let mainGraphSeries = {};\n        let isY2: boolean = false;\n        graphCollection.series.forEach((series, _index) => {\n            let _tempFields = (series.exp).match(GraphOperator.FIELD_PATTERN);\n            // replace all \"data.\"\" with \"\"\n            _tempFields = _tempFields.map(exp => exp.replace(\"data.\", \"\"));\n            // put fields together\n            fieldsForMainGraph = fieldsForMainGraph.concat(_tempFields);\n\n            if (view.graphConfig.entities.length == 1 && series.color) {\n                colors.push(series.color);\n            }\n\n            if (series.yIndex && series.yIndex == 'right') {\n                // right\n                y2Indexs.push(_index + 1);\n            } else if (!series.yIndex || series.yIndex == 'left') {\n                // left\n                yIndexs.push(_index + 1);\n            }\n\n            mainGraphSeries[series.label] = {\n                axis: series.yIndex == 'left' ? 'y' : 'y2',\n                color: series.color,\n                highlightCircleSize: 4\n            };\n\n            if (series.type == 'dots') {\n                mainGraphSeries[series.label][\"strokeWidth\"] = 0;\n                mainGraphSeries[series.label][\"drawPoints\"] = true;\n            }\n\n            if (series.yIndex != 'left') {\n                isY2 = true;\n            }\n\n        });\n\n\n        let prepareGraphData = (data, entities, collection): { data: Array<any>, axis?: { y: { min: number, max: number }, y2?: { min: number, max: number } } } => {\n            // update main graph\n            let graphData = [];\n            let finalData = [];\n            let _dates: Array<number> = [];\n            if (first && last) {\n                _dates = [first, last];\n            }\n            data.forEach(entityData => {\n                entities.forEach(id => {\n                    if (id == entityData.id) {\n                        graphData.push(entityData.data);\n                        // merge date \n                        entityData.data.forEach(item => {  // item is object\n                            if (_dates.indexOf(item.timestamp) == -1) {\n                                _dates.push(item.timestamp);\n                            }\n                        });\n                    }\n                });\n            });\n            // \n            _dates.sort();\n            if (entities.length == 1) {\n                // get collection config\n                collection.series.forEach((series, _index) => {\n                    var f = new Function(\"data\", \"with(data) { if(\" + series.exp + \"!=null)return \" + series.exp + \";return null;}\");\n                    // generate data for this column\n                    _dates.forEach(date => {\n                        // find date in finalData\n                        let point = finalData.find(record => record[0].getTime() == date);\n                        let record = graphData[0].find(data => data.timestamp == date);\n\n                        if (point) {\n                            point[_index + 1] = record ? f(record) : null;\n                        } else {\n                            point = [new Date(date)];\n                            point[_index + 1] = record ? f(record) : null;\n                            finalData.push(point);\n                        }\n\n                        // update min max for current field\n                        // left \n                        yIndexs.forEach(_yIndex => {\n                            if (_yIndex == (_index + 1)) {\n                                //\n                                if (yAxis.min) {\n                                    // compare and put the value\n                                    yAxis.min = yAxis.min > point[_index + 1] ? point[_index + 1] : yAxis.min;\n                                } else {\n                                    yAxis.min = point[_index + 1];\n                                }\n\n                                if (yAxis.max) {\n                                    // compare and put the value\n                                    yAxis.max = yAxis.max < point[_index + 1] ? point[_index + 1] : yAxis.max;\n                                } else {\n                                    yAxis.max = point[_index + 1];\n                                }\n                            }\n                        });\n\n                        // right \n                        y2Indexs.forEach(_yIndex => {\n                            if (_yIndex == (_index + 1)) {\n                                //\n                                if (yAxis2.min) {\n                                    // compare and put the value\n                                    yAxis2.min = yAxis2.min > point[_index + 1] ? point[_index + 1] : yAxis2.min;\n                                } else {\n                                    yAxis2.min = point[_index + 1];\n                                }\n\n                                if (yAxis2.max) {\n                                    // compare and put the value\n                                    yAxis2.max = yAxis2.max < point[_index + 1] ? point[_index + 1] : yAxis2.max;\n                                } else {\n                                    yAxis2.max = point[_index + 1];\n                                }\n                            }\n                        });\n                    });\n                });\n            } else if (entities.length > 1 && collection.series && collection.series[0]) {\n                const exp = collection.series[0].exp;\n                var f = new Function(\"data\", \"with(data) { if(\" + exp + \"!=null)return \" + exp + \";return null;}\");\n                _dates.forEach(date => {\n                    // get the record\n                    let point = finalData.find(record => record[0].getTime() == date);\n                    // if not found just add it as new one.\n                    if (!point) {\n                        point = [new Date(date)];\n                        finalData.push(point);\n                    }\n\n                    entities.forEach((entity, _index) => {\n                        let record = graphData[_index].find(data => data.timestamp == date);\n                        point[_index + 1] = record ? f(record) : null;\n\n                        yIndexs.forEach(_yIndex => {\n                            if (_yIndex == (_index + 1)) {\n                                //\n                                if (yAxis.min) {\n                                    // compare and put the value\n                                    yAxis.min = yAxis.min > point[_index + 1] ? point[_index + 1] : yAxis.min;\n                                } else {\n                                    yAxis.min = point[_index + 1];\n                                }\n\n                                if (yAxis.max) {\n                                    // compare and put the value\n                                    yAxis.max = yAxis.max < point[_index + 1] ? point[_index + 1] : yAxis.max;\n                                } else {\n                                    yAxis.max = point[_index + 1];\n                                }\n                            }\n                        });\n\n                        // right \n                        y2Indexs.forEach(_yIndex => {\n                            if (_yIndex == (_index + 1)) {\n                                //\n                                if (yAxis2.min) {\n                                    // compare and put the value\n                                    yAxis2.min = yAxis2.min > point[_index + 1] ? point[_index + 1] : yAxis2.min;\n                                } else {\n                                    yAxis2.min = point[_index + 1];\n                                }\n\n                                if (yAxis2.max) {\n                                    // compare and put the value\n                                    yAxis2.max = yAxis2.max < point[_index + 1] ? point[_index + 1] : yAxis2.max;\n                                } else {\n                                    yAxis2.max = point[_index + 1];\n                                }\n                            }\n                        });\n\n                    });\n                });\n            }\n\n            return { data: finalData, axis: { y: yAxis, y2: yAxis2 } };\n        }\n\n        // get data for \n        view.dataService.fetchdata(mainEntities, graphCollection.name, { start: start, end: end }, Array.from(new Set(fieldsForMainGraph))).then(resp => {\n\n            let graphData = prepareGraphData(resp, mainEntities, graphCollection);\n            let yScale: { valueRange: Array<number> } = { valueRange: [] };\n            let y2Scale: { valueRange: Array<number> } = { valueRange: [] };\n            // get init scale\n            if (!graphCollection.initScales) {\n                if (graphData.axis) {\n                    if (graphData.axis.y) {\n                        yScale.valueRange = [graphData.axis.y.min * 0.97, graphData.axis.y.max * 1.03];\n                    }\n\n                    if (graphData.axis.y2) {\n                        y2Scale.valueRange = [graphData.axis.y2.min * 0.97, graphData.axis.y2.max * 1.03];\n                    }\n                }\n            } else {\n                // check if there is a init scale\n                if (graphCollection.initScales.left) {\n                    yScale.valueRange = [graphCollection.initScales.left.min, graphCollection.initScales.left.max];\n\n                }\n                if (graphCollection.initScales.right) {\n                    y2Scale.valueRange = [graphCollection.initScales.right.min, graphCollection.initScales.right.max]\n                }\n            }\n            // clear old graph\n            mainGraph.hidden_ctx_.clearRect(0, 0, mainGraph.hidden_.width, mainGraph.hidden_.height);\n            // update main graph\n            mainGraph.updateOptions({\n                file: graphData.data,\n                series: mainGraphSeries,\n                fillGraph: graphCollection.fill ? graphCollection.fill : false,\n                highlightSeriesOpts: {\n                    strokeWidth: 1.5\n                },\n                axes: {\n                    x: {\n                        axisLabelFormatter: formatters.axisLabel\n                    },\n                    y: {\n                        valueRange: yScale.valueRange,\n                        axisLabelWidth: 60,\n                        labelsKMB: true\n                    },\n                    y2: {\n                        valueRange: y2Scale.valueRange,\n                        axisLabelWidth: 60,\n                        labelsKMB: true\n                    }\n                }\n            });\n\n        });\n\n\n        if (view.graphConfig.features.rangeBar) {\n            // get fields for range-bar \n            const rangeEntities: Array<string> = [view.graphConfig.rangeEntity.id];\n            // get fields for main graph\n            let fieldsForRangebarGraph = [];\n\n            rangeCollection.series.forEach(series => {\n                let _tempFields = (series.exp).match(GraphOperator.FIELD_PATTERN);\n                // replace all \"data.\"\" with \"\"\n                _tempFields = _tempFields.map(exp => exp.replace(\"data.\", \"\"));\n                // put fields together\n                fieldsForRangebarGraph = fieldsForRangebarGraph.concat(_tempFields);\n            });\n\n            // for range\n            view.dataService.fetchdata(rangeEntities, rangeCollection.name, { start: start, end: end }, Array.from(new Set(fieldsForRangebarGraph))).then(resp => {\n\n                // merge data\n                const currentDatewindowData = prepareGraphData(resp, rangeEntities, rangeCollection);\n                let preData: Array<any> = rangebarGraph.file_;\n                currentDatewindowData.data.forEach(_data => {\n                    let _exist: number = -1;\n                    preData.forEach((_oldData, _index) => {\n                        if (_oldData[0].getTime() == _data[0].getTime()) {\n                            _exist = _index;\n                        }\n                    });\n                    if (_exist != -1) {\n                        // replace\n                        preData.splice(_exist, 1, _data);\n                    } else {\n                        // add data before the last one\n                        preData.push(_data);\n                    }\n                });\n                // sorting\n                preData.sort((a, b) => {\n                    return a[0].getTime() > b[0].getTime() ? 1 : -1;\n                });\n\n                let rangeSeries = {};\n                let labels = [];\n                // check if ther is a y2\n                rangeCollection.series.forEach((series, _index) => {\n                    labels.push(series.label);\n                    rangeSeries[series.label] = {\n                        axis: (series.yIndex == \"left\" || !series.yIndex) ? 'y' : 'y2'\n                    };\n                });\n\n                if (isY2) {\n                    labels.push(\"y2\");\n                    rangeSeries[\"y2\"] = {\n                        axis: \"y2\"\n                    };\n\n                    preData.forEach(_data => {\n                        if (_data.length == 2) {\n                            _data.push(null);\n                        }\n                    });\n                } else {\n                    preData.forEach(_data => {\n                        if (_data.length > 2) {\n                            _data.splice(2, _data.length - 2);\n                        }\n                    });\n                }\n                rangebarGraph.updateOptions({\n                    file: preData,\n                    series: rangeSeries,\n                    labels: ['x'].concat(labels)\n                });\n            });\n        }\n\n    }\n\n}\n","module.exports = require(\"Dygraph\");","module.exports = require(\"moment\");"],"sourceRoot":""}